/**
 * Service RAG (Retrieval Augmented Generation) principal
 * Combine la recherche s√©mantique avec la g√©n√©ration de r√©ponses contextuelles
 */

import { searchEngine, searchUtils } from './searchEngine.js';
import { knowledgeBase } from './knowledgeBase.js';

/**
 * Classe principale du service RAG
 */
export class RAGService {
  constructor() {
    this.searchEngine = searchEngine;
    this.conversationHistory = [];
    this.maxHistoryLength = 10;
  }

  /**
   * Traite une question et g√©n√®re une r√©ponse contextuelle
   */
  async generateResponse(userQuery, options = {}) {
    const {
      maxDocuments = 3,
      includeSources = true,
      language = 'fr',
      contextLength = 5,
      boostDocumentId = null,
      boostDocument = null
    } = options;

    try {
      // 1. R√©cup√©ration des documents pertinents
      const retrievedDocs = this.retrieveRelevantDocuments(userQuery, maxDocuments, { boostDocumentId, boostDocument });
      
      // 2. Construction du contexte
      const context = this.buildContext(retrievedDocs, userQuery);
      
      // 3. G√©n√©ration de la r√©ponse
      const response = await this.generateContextualResponse(userQuery, context, language);
      
      // 4. Ajout √† l'historique
      this.addToHistory(userQuery, response, retrievedDocs);
      
      // 5. Formatage de la r√©ponse finale
      return {
        answer: response,
        sources: includeSources ? retrievedDocs.map(doc => ({
          id: doc.id,
          title: doc.title,
          category: doc.category,
          score: doc.score
        })) : [],
        confidence: this.calculateConfidence(retrievedDocs),
        suggestions: this.generateFollowUpQuestions(userQuery, retrievedDocs)
      };

    } catch (error) {
      console.error('Erreur dans RAGService:', error);
      return this.getFallbackResponse(userQuery);
    }
  }

  /**
   * R√©cup√®re les documents les plus pertinents
   */
  retrieveRelevantDocuments(query, maxDocuments, extra = {}) {
    // Recherche principale
    const mainResults = this.searchEngine.search(query, { 
      maxResults: maxDocuments,
      minScore: 0.2
    });

    // Recherche contextuelle si on a un historique
    let contextResults = [];
    if (this.conversationHistory.length > 0) {
      contextResults = this.searchEngine.contextualSearch(query, this.getRecentContext(), maxDocuments);
    }

    // Combine et d√©duplique les r√©sultats
    let allResults = [...mainResults, ...contextResults];

    // Boost d'un document s√©lectionn√© (plac√© en t√™te)
    if (extra && (extra.boostDocument || extra.boostDocumentId)) {
      let boosted = null;
      if (extra.boostDocument) {
        boosted = { ...extra.boostDocument, score: 999 }; // score tr√®s √©lev√© pour prioriser
      } else if (extra.boostDocumentId) {
        const kbDoc = knowledgeBase.find(doc => doc.id === extra.boostDocumentId);
        if (kbDoc) {
          boosted = { ...kbDoc, score: 999 };
        }
      }
      if (boosted) {
        allResults = [boosted, ...allResults];
      }
    }
    const uniqueResults = this.deduplicateResults(allResults);
    
    return uniqueResults.slice(0, maxDocuments);
  }

  /**
   * Construit le contexte √† partir des documents r√©cup√©r√©s
   */
  buildContext(documents, query) {
    const contextParts = [];
    
    documents.forEach((doc, index) => {
      contextParts.push(`Document ${index + 1} - ${doc.title}:
${doc.content}

Cat√©gorie: ${doc.category}
Mots-cl√©s: ${doc.keywords.join(', ')}`);
    });

    return contextParts.join('\n\n---\n\n');
  }

  /**
   * G√©n√®re une r√©ponse contextuelle (simulation d'un LLM)
   */
  async generateContextualResponse(query, context, language) {
    // Simulation d'un mod√®le de langage - dans un vrai syst√®me, 
    // ceci ferait appel √† OpenAI, Claude, ou un mod√®le local
    
    const queryLower = query.toLowerCase();
    
    // R√©ponses sp√©cialis√©es bas√©es sur le type de question
    if (queryLower.includes('tarif') || queryLower.includes('prix') || queryLower.includes('co√ªt')) {
      return this.generatePricingResponse(context);
    }
    
    if (queryLower.includes('cours') || queryLower.includes('apprendre') || queryLower.includes('niveau')) {
      return this.generateLessonResponse(context);
    }
    
    if (queryLower.includes('√©quipement') || queryLower.includes('mat√©riel') || queryLower.includes('s√©curit√©')) {
      return this.generateEquipmentResponse(context);
    }
    
    if (queryLower.includes('m√©t√©o') || queryLower.includes('conditions') || queryLower.includes('neige')) {
      return this.generateWeatherResponse(context);
    }
    
    if (queryLower.includes('contact') || queryLower.includes('r√©server') || queryLower.includes('r√©servation')) {
      return this.generateContactResponse(context);
    }
    
    // R√©ponse g√©n√©rique bas√©e sur le contexte
    return this.generateGenericResponse(query, context);
  }

  /**
   * G√©n√®re une r√©ponse sur les tarifs
   */
  generatePricingResponse(context) {
    return `Bas√© sur les informations disponibles, voici les d√©tails sur nos tarifs pour l'hiver 2025-2026 :

Les tarifs varient selon les p√©riodes :
‚Ä¢ D√©but de saison (novembre-d√©cembre) : √† partir de 79‚Ç¨/heure
‚Ä¢ Saison r√©guli√®re : 89-100‚Ç¨/heure  
‚Ä¢ Vacances scolaires et f√™tes : tarifs major√©s (jusqu'√† 131‚Ç¨/heure)

‚Ä¢ Tarifs journ√©e : 495‚Ç¨ √† 851‚Ç¨ selon la p√©riode
‚Ä¢ Remise de 8% pour les cours d'apr√®s-midi
‚Ä¢ Cr√©neaux disponibles : 09:00-13:00 et 13:00-16:30

Pour conna√Ætre le tarif exact pour votre p√©riode de s√©jour, n'h√©sitez pas √† me contacter directement.`;
  }

  /**
   * G√©n√®re une r√©ponse sur les cours
   */
  generateLessonResponse(context) {
    return `Je propose des cours adapt√©s √† tous les niveaux :

üéø **Ski Alpin :**
‚Ä¢ D√©butant : apprentissage des bases en confiance
‚Ä¢ Interm√©diaire : am√©lioration technique et fluidit√©
‚Ä¢ Avanc√© : perfectionnement et pistes rouges/noires

üèÇ **Snowboard :**
‚Ä¢ Initiation : √©quilibre et premi√®res descentes
‚Ä¢ Perfectionnement : virages frontside/backside, carving
‚Ä¢ Freestyle & hors-piste

üèîÔ∏è **Hors-piste s√©curis√© :**
‚Ä¢ Exploration encadr√©e du domaine hors pistes
‚Ä¢ Techniques sp√©cifiques et lecture du terrain
‚Ä¢ √âquipement de s√©curit√© fourni

Chaque cours offre un suivi individuel pour une progression personnalis√©e.`;
  }

  /**
   * G√©n√®re une r√©ponse sur l'√©quipement
   */
  generateEquipmentResponse(context) {
    return `Voici mes recommandations d'√©quipement :

**√âquipement de base :**
‚Ä¢ Skis/snowboard adapt√©s √† votre niveau
‚Ä¢ Chaussures de ski/snowboard
‚Ä¢ B√¢tons (pour le ski)
‚Ä¢ Casque (obligatoire)
‚Ä¢ Lunettes de soleil ou masque

**Pour le hors-piste (obligatoire) :**
‚Ä¢ DVA (D√©tecteur de Victimes d'Avalanches)
‚Ä¢ Pelle
‚Ä¢ Sonde

**Recommand√© :**
‚Ä¢ Sac airbag
‚Ä¢ Gilet airbag
‚Ä¢ Kit de premiers secours
‚Ä¢ T√©l√©phone portable charg√©

Je peux vous conseiller sur le choix de votre √©quipement selon votre niveau et vos objectifs.`;
  }

  /**
   * G√©n√®re une r√©ponse sur la m√©t√©o
   */
  generateWeatherResponse(context) {
    return `Pour les conditions m√©t√©o actuelles et les pr√©visions :

**Conseils g√©n√©raux :**
‚Ä¢ Matin : privil√©giez les pentes ensoleill√©es
‚Ä¢ Apr√®s-midi : neiges g√©n√©ralement plus souples
‚Ä¢ Consultez toujours les bulletins m√©t√©o avant de partir

**En cas de conditions particuli√®res :**
‚Ä¢ Brouillard : restez sur les pistes balis√©es
‚Ä¢ Temps variable : pr√©voyez plusieurs couches de v√™tements
‚Ä¢ Vent fort : √©vitez les cr√™tes et sommets

**Sources fiables :**
‚Ä¢ M√©t√©o France pour Val d'Is√®re et Tignes
‚Ä¢ Bulletins d'avalanche ANENA
‚Ä¢ Applications officielles des stations

Je consulte r√©guli√®rement ces sources pour adapter mes cours aux conditions.`;
  }

  /**
   * G√©n√®re une r√©ponse de contact
   */
  generateContactResponse(context) {
    return `Pour me contacter et r√©server vos cours :

üìß **Email :** meteniermyriam@yahoo.fr
üì± **T√©l√©phone :** +33 7 68 10 61 07
üìç **Adresse :** Val d'Is√®re, France

**R√©servation :**
‚Ä¢ Via le site Maison Sport (lien dans la section r√©servation)
‚Ä¢ Contact direct par email ou t√©l√©phone
‚Ä¢ Disponible pour questions et conseils personnalis√©s

**Politique d'annulation flexible :**
‚Ä¢ 21+ jours : remboursement 95%
‚Ä¢ 14-20 jours : remboursement 50%
‚Ä¢ ‚â§13 jours : pas de remboursement

N'h√©sitez pas √† me contacter pour toute question !`;
  }

  /**
   * G√©n√®re une r√©ponse g√©n√©rique bas√©e sur le contexte
   */
  generateGenericResponse(query, context) {
    const documents = context.split('---').filter(doc => doc.trim());
    
    if (documents.length === 0) {
      return "Je n'ai pas trouv√© d'informations sp√©cifiques sur votre question. Pouvez-vous √™tre plus pr√©cis ou essayer de reformuler ?";
    }

    let response = "Bas√© sur mes connaissances, voici ce que je peux vous dire :\n\n";
    
    documents.slice(0, 2).forEach((doc, index) => {
      const lines = doc.split('\n');
      const title = lines[0]?.replace('Document ' + (index + 1) + ' - ', '') || 'Information';
      const content = lines.slice(1).join('\n').trim();
      
      response += `**${title}**\n`;
      response += content.substring(0, 300) + (content.length > 300 ? '...' : '') + '\n\n';
    });

    response += "Pour plus de d√©tails ou des informations sp√©cifiques, n'h√©sitez pas √† me poser une question plus pr√©cise !";

    return response;
  }

  /**
   * Calcule le niveau de confiance de la r√©ponse
   */
  calculateConfidence(documents) {
    if (documents.length === 0) return 0.1;
    
    const avgScore = documents.reduce((sum, doc) => sum + doc.score, 0) / documents.length;
    return Math.min(avgScore / 10, 1.0); // Normalise le score entre 0 et 1
  }

  /**
   * G√©n√®re des questions de suivi
   */
  generateFollowUpQuestions(originalQuery, documents) {
    const suggestions = [];
    const queryLower = originalQuery.toLowerCase();
    
    if (queryLower.includes('tarif')) {
      suggestions.push("Quels sont les cr√©neaux horaires disponibles ?");
      suggestions.push("Y a-t-il des remises pour les cours d'apr√®s-midi ?");
    }
    
    if (queryLower.includes('cours')) {
      suggestions.push("Quel niveau me convient le mieux ?");
      suggestions.push("Proposez-vous des cours de hors-piste ?");
    }
    
    if (queryLower.includes('√©quipement')) {
      suggestions.push("Quel √©quipement est obligatoire pour le hors-piste ?");
      suggestions.push("O√π puis-je louer du mat√©riel ?");
    }
    
    // Suggestions bas√©es sur les cat√©gories des documents
    const categories = [...new Set(documents.map(doc => doc.category))];
    categories.forEach(category => {
      if (category === 'stations' && !queryLower.includes('tignes') && !queryLower.includes('val')) {
        suggestions.push("Quelles sont les diff√©rences entre Tignes et Val d'Is√®re ?");
      }
      if (category === 'securite' && !queryLower.includes('s√©curit√©')) {
        suggestions.push("Quelles sont les r√®gles de s√©curit√© en montagne ?");
      }
    });
    
    return suggestions.slice(0, 3);
  }

  /**
   * Ajoute une interaction √† l'historique
   */
  addToHistory(query, response, documents) {
    this.conversationHistory.push({
      query,
      response,
      documents: documents.map(doc => doc.id),
      timestamp: new Date()
    });
    
    // Limite la taille de l'historique
    if (this.conversationHistory.length > this.maxHistoryLength) {
      this.conversationHistory = this.conversationHistory.slice(-this.maxHistoryLength);
    }
  }

  /**
   * R√©cup√®re le contexte r√©cent pour la recherche contextuelle
   */
  getRecentContext() {
    return this.conversationHistory
      .slice(-3)
      .map(entry => entry.query)
      .join(' ');
  }

  /**
   * D√©duplique les r√©sultats de recherche
   */
  deduplicateResults(results) {
    const seen = new Set();
    return results.filter(result => {
      if (seen.has(result.id)) {
        return false;
      }
      seen.add(result.id);
      return true;
    });
  }

  /**
   * R√©ponse de secours en cas d'erreur
   */
  getFallbackResponse(query) {
    return {
      answer: "Je rencontre actuellement un probl√®me technique. Pouvez-vous reformuler votre question ou essayer plus tard ? En attendant, vous pouvez me contacter directement par email ou t√©l√©phone.",
      sources: [],
      confidence: 0.1,
      suggestions: [
        "Comment puis-je r√©server un cours ?",
        "Quels sont vos tarifs ?",
        "Quel √©quipement me faut-il ?"
      ]
    };
  }

  /**
   * Efface l'historique de conversation
   */
  clearHistory() {
    this.conversationHistory = [];
  }

  /**
   * Obtient l'historique de conversation
   */
  getHistory() {
    return this.conversationHistory;
  }
}

/**
 * Instance globale du service RAG
 */
export const ragService = new RAGService();

/**
 * Fonctions utilitaires pour l'API RAG
 */
export const ragUtils = {
  /**
   * Recherche rapide avec r√©ponse
   */
  async quickAnswer(query) {
    return await ragService.generateResponse(query, { maxDocuments: 2 });
  },

  /**
   * Recherche d√©taill√©e avec sources
   */
  async detailedAnswer(query) {
    return await ragService.generateResponse(query, { 
      maxDocuments: 5,
      includeSources: true 
    });
  },

  /**
   * Recherche par cat√©gorie
   */
  async searchCategory(category, query = '') {
    const docs = searchUtils.searchCategory(category, query);
    return await ragService.generateResponse(query, { maxDocuments: 3 });
  },

  /**
   * Obtient des suggestions de questions
   */
  getSuggestedQuestions() {
    return [
      "Quels sont vos tarifs pour cette saison ?",
      "Proposez-vous des cours pour d√©butants ?",
      "Quel √©quipement me faut-il pour le ski ?",
      "Comment r√©server un cours ?",
      "Quelles sont les conditions m√©t√©o actuelles ?",
      "Proposez-vous des cours de hors-piste ?"
    ];
  }
};
